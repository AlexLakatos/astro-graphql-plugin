import path from "path";
import fse from "fs-extra";

import type { AstroIntegration } from "astro";

import { loadSchema } from "@graphql-tools/load";
import { UrlLoader } from "@graphql-tools/url-loader";
import { GraphQLFileLoader } from "@graphql-tools/graphql-file-loader";
import { JsonFileLoader } from "@graphql-tools/json-file-loader";
import * as converters from "./src/converters";
import { getRelativeTypeUrl } from "./src/getRelativeTypeUrl";

export default function GraphQL(options): AstroIntegration {
  // See the Integration API docs for full details
  // https://docs.astro.build/en/reference/integrations-reference/
  return {
    name: "astro-graphql-plugin",
    hooks: {
      "astro:config:setup": async () => {
        const schema = await loadSchema(options.schema, {
          loaders: [
            new UrlLoader(),
            new GraphQLFileLoader(),
            new JsonFileLoader(),
          ],
        });

        const outputPath = path.join(options.output);
		console.log(outputPath);
        const convertersList = Object.values(converters);
        for (let index = 0; index < convertersList.length; index++) {
          const converter = convertersList[index];
          console.log(converter);
          const markdown = converter.convertToMarkdown(schema, {
            getTypePath: getRelativeTypeUrl,
          });

          if (!markdown) {
            // do not create an empty file
            continue;
          }

          await fse.outputFile(
            path.join(outputPath, `${converter.id}.md`),
            [
              `---`,
              `title: ${converter.title}`,
              `---`,
              ``,
              `<!-- Do not edit this file, it has been automatically generated by docusaurus-graphql-plugin -->`,
              ``,
              markdown,
            ].join(`\n`)
          );
        }
      },

      //   {

      //     // See the @astrojs/react integration for an example
      //     // https://github.com/withastro/astro/blob/main/packages/integrations/react/src/index.ts
      //   },
      //   "astro:build:setup": ({ config, updateConfig }) => {
      //     // See the @astrojs/netlify integration for an example
      //     // https://github.com/withastro/astro/blob/main/packages/integrations/netlify/src/integration-functions.ts
      //   },
      //   "astro:build:done": ({ dir, routes }) => {
      //     // See the @astrojs/partytown integration for an example
      //     // https://github.com/withastro/astro/blob/main/packages/integrations/partytown/src/index.ts
      //   },
    },
  };
}
